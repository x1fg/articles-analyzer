import os
from src.api_caller import APICaller
from src.database.models import SessionLocal, Article
from src.config.settings import OPENAI_API_KEY

class Summarizer:
    def __init__(self, summary_folder='data/summaries'):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞ Summarizer.

        Args:
            summary_folder (str): –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è–º–∏.
        """
        self.api_caller = APICaller(api_key=OPENAI_API_KEY)
        self.summary_folder = summary_folder
        if not os.path.exists(self.summary_folder):
            os.makedirs(self.summary_folder)

    def summarize_article(self, article):
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏.

        Args:
            article (Article): –û–±—ä–µ–∫—Ç —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

        Returns:
            str: –¢–µ–∫—Å—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏.
        """
        system_prompt = "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞—É—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π."
        user_prompt = f"–°—É–º–º–∞—Ä–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â—É—é —Å—Ç–∞—Ç—å—é: {article.title}"
        try:
            print(f"üîç –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—å–∏: {article.title}")
            summary = self.api_caller.call_gpt35_turbo(
                system_prompt=system_prompt,
                user_prompt=user_prompt,
                max_tokens=300,
                temperature=0.7
            )
            return summary
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—å–∏ '{article.title}': {e}")
            return None

    def save_summary_to_file(self, article, summary):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é —Å—Ç–∞—Ç—å–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª.

        Args:
            article (Article): –û–±—ä–µ–∫—Ç —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
            summary (str): –¢–µ–∫—Å—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏.

        Returns:
            str: –ü—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.
        """
        safe_title = "".join(c if c.isalnum() else "_" for c in article.title[:50])
        filename = f"{safe_title}_{article.id}.txt"
        file_path = os.path.join(self.summary_folder, filename)
        try:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(summary)
            print(f"‚úÖ –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {file_path}")
            return file_path
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—å–∏ '{article.title}': {e}")
            return None

    def process_all(self):
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–π –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π –±–µ–∑ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏.
        """
        session = SessionLocal()
        articles = session.query(Article).filter(Article.summary == None).all()
        print(f"‚è≥ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(articles)}")
        for article in articles:
            summary = self.summarize_article(article)
            if summary:
                summary_path = self.save_summary_to_file(article, summary)
                if summary_path:
                    article.summary = summary
                    article.summary_path = summary_path
                    session.commit()
                    print(f"‚úÖ –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è —Å—Ç–∞—Ç—å–∏: {article.title}")
        session.close()